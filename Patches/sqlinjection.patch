diff -Naur bookstore/BookDetail.jsp bookstore_secure/BookDetail.jsp
--- bookstore/BookDetail.jsp	2018-03-04 13:33:53.975755037 -0600
+++ bookstore_secure/BookDetail.jsp	2018-03-04 13:32:49.391455974 -0600
@@ -142,7 +142,8 @@
       if ( sDetailErr.length() > 0 ) return sDetailErr;
       try {
         // Execute SQL statement
-        stat.executeUpdate(sSQL);
+	PreparedStatement pstmt = conn.prepareStatement(sSQL); 
+        pstmt.executeQuery();
       }
       catch(java.sql.SQLException e) {
         sDetailErr = e.toString(); return (sDetailErr);
@@ -210,7 +211,8 @@
       
       if ( isEmpty(pitem_id)) { bPK = false; }
       
-      sWhere += "item_id=" + toSQL(pitem_id, adNumber);
+      //pitem_id = toSQL(pitem_id, adNumber);
+      sWhere += "item_id = ?";
       primaryKeyParams += "<input type=\"hidden\" name=\"PK_item_id\" value=\""+pitem_id+"\"/>";
 
       sSQL = "select * from items where " + sWhere;
@@ -229,7 +231,9 @@
       if ( bPK &&  ! (sAction.equals("insert") && "Detail".equals(sForm))) {
 
         // Open recordset
-        rs = openrs( stat, sSQL);
+        PreparedStatement pstmt = conn.prepareStatement(sSQL); 
+        pstmt.setString(1, pitem_id); 
+        rs = pstmt.executeQuery();
         rs.next();
         String[] aFields = getFieldsName( rs );
         getRecordToHash( rs, rsHash, aFields );
@@ -388,19 +392,21 @@
       sSQL = "";
       // Create SQL statement
 
+      boolean insertValid = false;
       switch (iAction) {
   
         case iinsertAction :
           
+            //fldUserID = toSQL(fldUserID, adNumber);
+            //fldquantity = toSQL(fldquantity, adNumber);
+            flditem_id = toSQL(flditem_id, adNumber);
             sSQL = "insert into orders (" + 
                 "member_id," + 
                 "quantity," +
                 "item_id)" +
 
-                " values (" + 
-                toSQL(fldUserID, adNumber) + "," +
-                toSQL(fldquantity, adNumber) + "," +
-                toSQL(flditem_id, adNumber) + ")";
+                " values (?, ?, ?)";
+            insertValid = true;
           break;
   
       }
@@ -408,7 +414,13 @@
       if ( sOrderErr.length() > 0 ) return sOrderErr;
       try {
         // Execute SQL statement
-        stat.executeUpdate(sSQL);
+	PreparedStatement pstmt = conn.prepareStatement(sSQL); 
+	if (insertValid) {
+            pstmt.setString(1, fldUserID); 
+            pstmt.setString(2, fldquantity);
+            pstmt.setString(3, flditem_id);
+	}
+	pstmt.executeUpdate();
       }
       catch(java.sql.SQLException e) {
         sOrderErr = e.toString(); return (sOrderErr);
@@ -469,7 +481,8 @@
       
       if ( isEmpty(porder_id)) { bPK = false; }
       
-      sWhere += "order_id=" + toSQL(porder_id, adNumber);
+      //porder_id = toSQL(porder_id, adNumber);
+      sWhere += "order_id = ?";
       primaryKeyParams += "<input type=\"hidden\" name=\"PK_order_id\" value=\""+porder_id+"\"/>";
 
       sSQL = "select * from orders where " + sWhere;
@@ -488,7 +501,9 @@
       if ( bPK &&  ! (sAction.equals("insert") && "Order".equals(sForm))) {
 
         // Open recordset
-        rs = openrs( stat, sSQL);
+	PreparedStatement pstmt = conn.prepareStatement(sSQL); 
+        pstmt.setString(1, porder_id); 
+        rs = pstmt.executeQuery();
         rs.next();
         String[] aFields = getFieldsName( rs );
         getRecordToHash( rs, rsHash, aFields );
@@ -583,7 +598,8 @@
       if ( iAction == iupdateAction || iAction == ideleteAction ) { 
         pPKitem_id = getParam( request, "PK_item_id");
         if ( isEmpty(pPKitem_id)) return sRatingErr;
-        sWhere = "item_id=" + toSQL(pPKitem_id, adNumber);
+	//pPKitem_id = toSQL(pPKitem_id, adNumber);
+        sWhere = "item_id = ?"
       }
 
 
@@ -615,18 +631,22 @@
 
 
       sSQL = "";
+      boolean isChange = false;
       // Create SQL statement
 
       switch (iAction) {
   
       case iupdateAction:
         
-sSQL = "update items set rating=rating+" + getParam(request, "rating") + ", rating_count=rating_count+1 where item_id=" + getParam(request, "item_id");
+sSQL = "update items set rating = ?, rating_count = ? where item_id = ?";
         if ("".equals(sSQL)) {
+	  //fldrating = toSQL(fldrating, adNumber)
+	  //fldrating_count = toSQL(fldrating_count, adNumber);
           sSQL = "update items set " +
-                "rating=" + toSQL(fldrating, adNumber) +
-                ",rating_count=" + toSQL(fldrating_count, adNumber);
+                "rating = ?" +
+                ",rating_count = ?";
           sSQL = sSQL + " where " + sWhere;
+	  isChange = true;
         }
         break;
       
@@ -635,7 +655,17 @@
       if ( sRatingErr.length() > 0 ) return sRatingErr;
       try {
         // Execute SQL statement
-        stat.executeUpdate(sSQL);
+	PreparedStatement pstmt = conn.prepareStatement(sSQL); 
+        if (isChange) {
+		pstmt.setString(1, fldrating); 
+		pstmt.setString(2, fldrating_count); 
+		pstmt.setString(3, pPKitem_id); 
+	} else {
+		pstmt.setString(1, rating + getParam(request, "rating")); 
+		pstmt.setString(2, rating_count + 1); 
+		pstmt.setString(3, getParam(request, "item_id")); 
+	}
+        pstmt.executeUpdate();
       }
       catch(java.sql.SQLException e) {
         sRatingErr = e.toString(); return (sRatingErr);
@@ -702,7 +732,8 @@
       
       if ( isEmpty(pitem_id)) { bPK = false; }
       
-      sWhere += "item_id=" + toSQL(pitem_id, adNumber);
+      //pitem_id = toSQL(pitem_id, adNumber);
+      sWhere += "item_id = ?";
       primaryKeyParams += "<input type=\"hidden\" name=\"PK_item_id\" value=\""+pitem_id+"\"/>";
 
       sSQL = "select * from items where " + sWhere;
@@ -721,7 +752,9 @@
       if ( bPK &&  ! (sAction.equals("insert") && "Rating".equals(sForm))) {
 
         // Open recordset
-        rs = openrs( stat, sSQL);
+	PreparedStatement pstmt = conn.prepareStatement(sSQL); 
+        pstmt.setString(1, pitem_id); 
+        rs = pstmt.executeQuery();
         rs.next();
         String[] aFields = getFieldsName( rs );
         getRecordToHash( rs, rsHash, aFields );
@@ -804,4 +837,4 @@
 
     }
     catch (Exception e) { out.println(e.toString()); }
-  } %>
\ No newline at end of file
+  } %>
diff -Naur bookstore/Common.jsp bookstore_secure/Common.jsp
--- bookstore/Common.jsp	2018-03-04 13:33:53.975755037 -0600
+++ bookstore_secure/Common.jsp	2018-03-04 13:32:49.487456315 -0600
@@ -1,3 +1,4 @@
+<%@ page import="java.sql.PreparedStatement, java.sql.Statement" %>
 <%!
 //
 //   Filename: Common.jsp
@@ -207,7 +208,7 @@
     }
      switch (type) {
        case adText: {
-        param = replace(param, "' ", "''");
+         param = replace(param, "' ", "''");
          param = replace(param, "&amp;", "&");
          param = "'" + param + "'";
         break;
diff -Naur bookstore/Default.jsp bookstore_secure/Default.jsp
--- bookstore/Default.jsp	2018-03-04 13:33:53.975755037 -0600
+++ bookstore_secure/Default.jsp	2018-03-04 13:32:49.483456300 -0600
@@ -194,10 +194,10 @@
         sSortParams = "FormRecommended_Sorting=" + sSort + "&FormRecommended_Sorted=" + "&";
       }
     
-      if ( iSort == 1) { sOrder = " order by i.name" + sDirection; }
-      if ( iSort == 2) { sOrder = " order by i.author" + sDirection; }
-      if ( iSort == 3) { sOrder = " order by i.image_url" + sDirection; }
-      if ( iSort == 4) { sOrder = " order by i.price" + sDirection; }
+      if ( iSort == 1) { sOrder = " order by i.name ?"; }
+      if ( iSort == 2) { sOrder = " order by i.author ?"; }
+      if ( iSort == 3) { sOrder = " order by i.image_url ?"; }
+      if ( iSort == 4) { sOrder = " order by i.price ?"; }
     }
   
 
@@ -240,7 +240,11 @@
   try {
     java.sql.ResultSet rs = null;
     // Open recordset
-    rs = openrs( stat, sSQL);
+    PreparedStatement pstmt = conn.prepareStatement(sSQL);
+    if (!sDirection.equals("")) {
+    	pstmt.setString(1, sDirection);
+    }
+    rs = pstmt.executeQuery();
     iCounter = 0;
     absolute (rs, (iPage-1)*RecordsPerPage+1);
     java.util.Hashtable rsHash = new java.util.Hashtable();
@@ -371,7 +375,8 @@
   try {
     java.sql.ResultSet rs = null;
     // Open recordset
-    rs = openrs( stat, sSQL);
+    PreparedStatement pstmt = conn.prepareStatement(sSQL);
+    rs = pstmt.executeQuery();
     iCounter = 0;
     
     java.util.Hashtable rsHash = new java.util.Hashtable();
@@ -462,7 +467,8 @@
   try {
     java.sql.ResultSet rs = null;
     // Open recordset
-    rs = openrs( stat, sSQL);
+    PreparedStatement pstmt = conn.prepareStatement(sSQL);
+    rs = pstmt.executeQuery();
     iCounter = 0;
     
     java.util.Hashtable rsHash = new java.util.Hashtable();
@@ -552,7 +558,8 @@
   try {
     java.sql.ResultSet rs = null;
     // Open recordset
-    rs = openrs( stat, sSQL);
+    PreparedStatement pstmt = conn.prepareStatement(sSQL);
+    rs = pstmt.executeQuery();
     iCounter = 0;
     
     java.util.Hashtable rsHash = new java.util.Hashtable();
@@ -649,7 +656,8 @@
   try {
     java.sql.ResultSet rs = null;
     // Open recordset
-    rs = openrs( stat, sSQL);
+    PreparedStatement pstmt = conn.prepareStatement(sSQL);
+    rs = pstmt.executeQuery();
     iCounter = 0;
     
     java.util.Hashtable rsHash = new java.util.Hashtable();
@@ -740,7 +748,8 @@
   try {
     java.sql.ResultSet rs = null;
     // Open recordset
-    rs = openrs( stat, sSQL);
+    PreparedStatement pstmt = conn.prepareStatement(sSQL);
+    rs = pstmt.executeQuery();
     iCounter = 0;
     
     java.util.Hashtable rsHash = new java.util.Hashtable();
@@ -775,4 +784,4 @@
   }
   catch (Exception e) { out.println(e.toString()); }
 }
-%>
\ No newline at end of file
+%>
diff -Naur bookstore/.git/index bookstore_secure/.git/index
--- bookstore/.git/index	2018-03-04 13:33:53.975755037 -0600
+++ bookstore_secure/.git/index	2018-03-04 13:32:49.391455974 -0600
@@ -1,12 +1,12 @@
-DIRC      ?Zõa∑0Ω≠Zõa∑0Ω≠    Á_  ÅÌ          ;çI/3˚”Ä(pñ`Bö•m≠à5&u` AdminBooks.jsp    Zõa∑0Ω≠Zõa∑0Ω≠    Áa  ÅÌ          +p:¿PloécbußTYÅ‡Åq˚ AdminMenu.jsp     Zõa∑0Ω≠Zõa∑0Ω≠    π   ÅÌ          `!'»zØÜàÃÉE—Ã†ÌÆ™Æ AdvSearch.jsp     ZúJ!:(◊ZúJ!:(◊    π!  ÅÌ          xtGg
+DIRC      ?Zõa∑0Ω≠Zõa∑0Ω≠    Á_  ÅÌ          ;çI/3˚”Ä(pñ`Bö•m≠à5&u` AdminBooks.jsp    Zõa∑0Ω≠Zõa∑0Ω≠    Áa  ÅÌ          +p:¿PloécbußTYÅ‡Åq˚ AdminMenu.jsp     Zõa∑0Ω≠Zõa∑0Ω≠    π   ÅÌ          `!'»zØÜàÃÉE—Ã†ÌÆ™Æ AdvSearch.jsp     Zõa∑0Ω≠Zõa∑0Ω≠    π!  ÅÌ          xtGg
 BÁÜ^¨•Ø_‡áﬁ÷Bï BookDetail.jsp    Zõa∑0Ω≠Zõa∑0Ω≠    π"  ÅÌ          C‰S[„JƒmÚŒL‹FÒ;üD-
-¥2 BookMaint.jsp     ZúIØ8Òà8ZúIØ8Òà8    π+  ÅÌ          MÈ<FC«AB◊ˆ®—]¶ê÷}√æ“? 	Books.jsp Zõa∑0Ω≠Zõa∑0Ω≠    π$  ÅÌ          ëögèøÁ6Dú+í]ìÑ|†9âùj CardTypesGrid.jsp Zõa∑0Ω≠Zõa∑0Ω≠    π%  ÅÌ          ($t2k˛Pﬂ«§æµÙZ‡Ú˝πÀËì CardTypesRecord.jsp       Zõa∑0Ω≠Zõa∑0Ω≠    π&  ÅÌ          "V∆wì∞=´É.q)ù¨–Z[»M CategoriesGrid.jsp        Zõa∑0Ω≠Zõa∑0Ω≠    π'  ÅÌ          (0ÓÆ’J2 É$˚ø!Z4fjÌÅã¿: CategoriesRecord.jsp      ZúJ!:(◊ZúJ!:(◊    π9  ÅÌ          +óK(4¸¸dü`7™çÓœ¬™˝v≤˝º 
-Common.jsp        ZúJ!:(◊ZúJ!:(◊    π.  ÅÌ          {—m Wü⁄&Â∑¯ÎÅ∑	|˜â}ÇQ Default.jsp       Zõa∑0Ω≠Zõa∑0Ω≠    π;  ÅÌ          #‰´<véAnπ4 Ånç„q’¢I~( EditorialCatGrid.jsp      Zõa∑0Ω≠Zõa∑0Ω≠    π)  ÅÌ          *¬pm“ÍMúŸ!µ2†A¬ar∂d EditorialCatRecord.jsp    Zõa∑0Ω≠Zõa∑0Ω≠    π,  ÅÌ          )C∫‘Û	O˘ZRÃ—≈3îK3ßv: EditorialsGrid.jsp        Zõa∑0Ω≠Zõa∑0Ω≠    π-  ÅÌ          4Õ>/E®1ã5C,ÍF’|Ñ^— EditorialsRecord.jsp      Zèå ”j˙Zèå ”j˙    π0  ÅÌ          	T‘ù”n•å>“»· Oˇ—˛kZ<  
+¥2 BookMaint.jsp     ZúIØ8Òà8ZúIØ8Òà8    π+  ÅÌ          MÈ<FC«AB◊ˆ®—]¶ê÷}√æ“? 	Books.jsp Zõa∑0Ω≠Zõa∑0Ω≠    π$  ÅÌ          ëögèøÁ6Dú+í]ìÑ|†9âùj CardTypesGrid.jsp Zõa∑0Ω≠Zõa∑0Ω≠    π%  ÅÌ          ($t2k˛Pﬂ«§æµÙZ‡Ú˝πÀËì CardTypesRecord.jsp       Zõa∑0Ω≠Zõa∑0Ω≠    π&  ÅÌ          "V∆wì∞=´É.q)ù¨–Z[»M CategoriesGrid.jsp        Zõa∑0Ω≠Zõa∑0Ω≠    π'  ÅÌ          (0ÓÆ’J2 É$˚ø!Z4fjÌÅã¿: CategoriesRecord.jsp      Zõa∑0Ω≠Zõa∑0Ω≠    π(  ÅÌ          +óK(4¸¸dü`7™çÓœ¬™˝v≤˝º 
+Common.jsp        Zèå ”j˙Zèå ”j˙    π+  ÅÌ          {—m Wü⁄&Â∑¯ÎÅ∑	|˜â}ÇQ Default.jsp       Zõa∑0Ω≠Zõa∑0Ω≠    π;  ÅÌ          #‰´<véAnπ4 Ånç„q’¢I~( EditorialCatGrid.jsp      Zõa∑0Ω≠Zõa∑0Ω≠    π)  ÅÌ          *¬pm“ÍMúŸ!µ2†A¬ar∂d EditorialCatRecord.jsp    Zõa∑0Ω≠Zõa∑0Ω≠    π,  ÅÌ          )C∫‘Û	O˘ZRÃ—≈3îK3ßv: EditorialsGrid.jsp        Zõa∑0Ω≠Zõa∑0Ω≠    π-  ÅÌ          4Õ>/E®1ã5C,ÍF’|Ñ^— EditorialsRecord.jsp      Zèå ”j˙Zèå ”j˙    π0  ÅÌ          	T‘ù”n•å>“»· Oˇ—˛kZ<  
 Footer.jsp        Zèå ”j˙Zèå ”j˙    π1  ÅÌ          
 ıròO+˘˜Sˇπùá|BE¥† 
-Header.jsp        ZúJ!:(◊ZúJ!:(◊    π*  ÅÌ          ¢Úl^–<O`åöÅ6«“}fÚW∏y 	Login.jsp Zèå ”j˙Zèå ”j˙    π3  ÅÌ           j∞ó^yúúÕnvzº¯ ,∫Ü=‡ META-INF/MANIFEST.MF      Zõa∑0Ω≠Zõa∑0Ω≠    Ë÷  ÅÌ          3j3∏%√}ëØª◊∆y7˚Z;‘ MembersGrid.jsp   Zõa∑0Ω≠Zõa∑0Ω≠    π/  ÅÌ          FDÔeh÷;cÿ∆@s:>Jù§Võ  MembersInfo.jsp   Zõa∑0˙∂Zõa∑0˙∂    π4  ÅÌ          RÜ¬Üøå 5h\›d⁄—vw“≠¢| MembersRecord.jsp ZúJ!:(◊ZúJ!:(◊    π8  ÅÌ          @úV≠˘U^Î]‘
+Header.jsp        Zö‰%ñŸ]Zö‰%ñŸ]    π±  ÅÌ          ¢Úl^–<O`åöÅ6«“}fÚW∏y 	Login.jsp Zèå ”j˙Zèå ”j˙    π3  ÅÌ           j∞ó^yúúÕnvzº¯ ,∫Ü=‡ META-INF/MANIFEST.MF      Zõa∑0Ω≠Zõa∑0Ω≠    Ë÷  ÅÌ          3j3∏%√}ëØª◊∆y7˚Z;‘ MembersGrid.jsp   Zõa∑0Ω≠Zõa∑0Ω≠    π/  ÅÌ          FDÔeh÷;cÿ∆@s:>Jù§Võ  MembersInfo.jsp   Zõa∑0˙∂Zõa∑0˙∂    π4  ÅÌ          RÜ¬Üøå 5h\›d⁄—vw“≠¢| MembersRecord.jsp Zõa∑0˙∂Zõa∑0˙∂    π5  ÅÌ          @úV≠˘U^Î]‘
 Â!¬ı∞Â# 
-MyInfo.jsp        Zõa∑0˙∂Zõa∑0˙∂    π6  ÅÌ          6äí˙´!ΩœÊœ?÷v∑uµéÄb> OrdersGrid.jsp    Zõa∑0˙∂Zõa∑0˙∂    ﬂÍ  ÅÌ          6˝?Û"S^"âLÏmÈ{˙0ÎFÊ˙ OrdersRecord.jsp  ZúJ!:(◊ZúJ!:(◊    π(  ÅÌ          C˛)…âYﬁÅ;Åûq éW{¿c÷î Registration.jsp  Zõa∑0˙∂Zõa∑0˙∂    π<  ÅÌ          Mœñp`c‚s»*WÊ‰◊˘∏Èì ShoppingCart.jsp  ZúJ!:(◊ZúJ!:(◊    π#  ÅÌ          /ç|43ÖÏóÿ5Ã&HÆ)	* ShoppingCartRecord.jsp    Zèå M|˘Zèå M|˘    π=  ÅÌ          y™Üj®‹`ö–(o·“–ø5[mv  database/SQL/BookStore_MySQL.sql  Zèå M|˘Zèå M|˘    π>  ÅÌ           ÊI ≤B§zø_œ⁄Ó˛
+MyInfo.jsp        Zõa∑0˙∂Zõa∑0˙∂    π6  ÅÌ          6äí˙´!ΩœÊœ?÷v∑uµéÄb> OrdersGrid.jsp    Zõa∑0˙∂Zõa∑0˙∂    ﬂÍ  ÅÌ          6˝?Û"S^"âLÏmÈ{˙0ÎFÊ˙ OrdersRecord.jsp  Zõa∑0˙∂Zõa∑0˙∂    π8  ÅÌ          C˛)…âYﬁÅ;Åûq éW{¿c÷î Registration.jsp  Zõa∑0˙∂Zõa∑0˙∂    π<  ÅÌ          Mœñp`c‚s»*WÊ‰◊˘∏Èì ShoppingCart.jsp  Zõa∑0˙∂Zõa∑0˙∂    π*  ÅÌ          /ç|43ÖÏóÿ5Ã&HÆ)	* ShoppingCartRecord.jsp    Zèå M|˘Zèå M|˘    π=  ÅÌ          y™Üj®‹`ö–(o·“–ø5[mv  database/SQL/BookStore_MySQL.sql  Zèå M|˘Zèå M|˘    π>  ÅÌ           ÊI ≤B§zø_œ⁄Ó˛
 „t≤˚† images/1stars.gif Zèå M|˘Zèå M|˘    π?  ÅÌ           Ó¯T«# êg#Êè<§ÅiÀi|1Òt images/2stars.gif Zèå M|˘Zèå M|˘    π@  ÅÌ           Ù—ö—auˇh“±°íïó0÷fâb images/3stars.gif Zèå M|˘Zèå M|˘    πA  ÅÌ           Éù6√N4è∫RâÃ)J2*A4Ë images/4stars.gif Zèå M|˘Zèå M|˘    πB  ÅÌ           ËÉüR8◊Ô«Ä¢•7:^¢∏sïˆ> images/5stars.gif Zèå M|˘Zèå M|˘    πC  ÅÌ          ’<éÿ	nä|^ÍÔQ˘#˚wD ≥ images/Logo_bookstore.gif Zèå M|˘Zèå M|˘    πD  ÅÌ          ›9}πä¡C≥Ï4øTw!¬f™í&“ images/books/0072122420.jpg       Zèå M|˘Zèå M|˘    πE  ÅÌ          ¿¶E*£rÿ¡åZ6Uâö®ıJ)8Ë images/books/020135358X.gif       Zèå M|˘Zèå M|˘    πF  ÅÌ          ë#.‹¨/êùÔ¯ÕW[^ë™ÄbÊL images/books/0201354934.jpg       Zèå M|˘Zèå M|˘    πG  ÅÌ          ≠;1©‹9	ÓË£—æ •A™= images/books/0596000278.jpg       Zèå M|˘Zèå M|˘    πH  ÅÌ          #ÿÇ1›\ˆ‚wLªøb6∂wl3 images/books/0672317842.jpg       Zèå M|˘Zèå M|˘    πI  ÅÌ          ◊k∑æ	søF*À¥I%)Y˚ P images/books/0672317966.jpg       Zèå M|˘Zèå M|˘    πJ  ÅÌ          \~‚Û∫}ï·ËÑ#N≠`C‚v∫â images/books/0735609667.jpg       Zèå M|˘Zèå M|˘    πK  ÅÌ          ÿ7ÍC»‡tJE‰®˜ÛÌ ‘ images/books/0735709211.jpg       Zèå M|˘Zèå M|˘    πL  ÅÌ          rö;Ê«Lkäxdê/k_?‡î¿— images/books/0735709491.jpg       Zèå M|˘Zèå M|˘    πM  ÅÌ          •∆ÛÒCr¥*Sä⁄•Ü∞j–ë images/books/0735709971.jpg       Zèå M|˘Zèå M|˘    πN  ÅÌ          ﬂ¥˙™·s5.iûVÜÿOîV!— images/books/0761530169.jpg       Zèå M|˘Zèå M|˘    πO  ÅÌ          aY|§®∫2òB„nã1›E+p images/books/0782127738.jpg       Zèå M|˘Zèå M|˘    πP  ÅÌ          UÈ¢∆x⁄≤üp$¢›Å?\˝b images/books/0789724405.jpg       Zèå M|˘Zèå M|˘    πQ  ÅÌ          07")ilJùø¥ô≈ó◊/ØÌÌh∫h images/books/0879304979.gif       Zèå M|˘Zèå M|˘    πR  ÅÌ          ãüË=B>RmMd¬üY∑˝£9 images/books/1565924347.jpg       Zèå M|˘Zèå M|˘    πS  ÅÌ          Z2ÿˇÜ5‘w…ceK≠DU9¥GÁ{ images/books/1565925157.jpg       Zèå M|˘Zèå M|˘    πT  ÅÌ          ﬂ€¸Ó√yÅÉ£MY†Êpk± images/books/1861002726.jpg       Zèå M|˘Zèå M|˘    πU  ÅÌ           ^ãú?¯OèÖÅ2¨ë
 MèYG images/books/1861003382.jpg       Zèå M|˘Zèå M|˘    πV  ÅÌ           ªq#Fs8≥Fc“NBÅ∑êè images/books/1861004656.jpg       Zèå M|˘Zèå M|˘    πW  ÅÌ          <-èŸÉ[û›ûÄRΩk&Ã‚*H images/books/1861004877.jpg       Zèå M|˘Zèå M|˘    πX  ÅÌ          ÖjêPï˛Å"]B*’‰ÅT∏ images/books/1884133193.gif       Zèå M|˘Zèå M|˘    πY  ÅÌ          Ùô»]µ∫`d=CÛ_¯åÚr/ images/books/1884777996.jpg       Zèå M|˘Zèå M|˘    πZ  ÅÌ          	õÜp&±v%tÂ¬+Qîp≠qæ images/icon_admin.gif     Zèå M|˘Zèå M|˘    π[  ÅÌ          √7P◊¬*’Ä·wo·@ÿ‘ckQöÉ images/icon_home.gif      Zèå M|˘Zèå M|˘    π\  ÅÌ          	Ö√˚ª≥Õ’8Ø„ﬂÎsOiF0btﬂ images/icon_reg.gif       Zèå M|˘Zèå M|˘    π]  ÅÌ          	{`ìÈòΩMµ%V>‡ü⁄®˙J] images/icon_shop.gif      Zèå M|˘Zèå M|˘    π^  ÅÌ          Ñ’hT≈‡1ë ÀÛºPˆxº
-fx images/icon_sign.gif      ›B∂†Vwÿn£;Èæ{˝Æ»üﬂ{
\ No newline at end of file
+fx images/icon_sign.gif      ÑU}ˆ€˙˝3J ‘µπ(#q
diff -Naur bookstore/Login.jsp bookstore_secure/Login.jsp
--- bookstore/Login.jsp	2018-03-04 13:33:53.975755037 -0600
+++ bookstore_secure/Login.jsp	2018-03-04 13:32:49.391455974 -0600
@@ -84,8 +84,14 @@
          
           String sLogin = getParam( request, "Login");
           String sPassword = getParam( request, "Password");
+	  //sLogin = toSQL(sLogin, adText);
+	  //sPassword = toSQL(sPassword, adText);
           java.sql.ResultSet rs = null;
-          rs = openrs( stat, "select member_id, member_level from members where member_login =" + toSQL(sLogin, adText) + " and member_password=" + toSQL(sPassword, adText));
+	  String query = "select member_id, member_level from members where member_login = ? and member_password = ?";
+	  PreparedStatement pstmt = conn.prepareStatement(query);
+	  pstmt.setString(1, sLogin);
+	  pstmt.setString(2, sPassword);
+	  rs = pstmt.executeQuery();
           
           if ( rs.next() ) {
             // Login and password passed
@@ -171,4 +177,4 @@
     }
     catch (Exception e) { out.println(e.toString()); }
   }
-%>
\ No newline at end of file
+%>
diff -Naur bookstore/MyInfo.jsp bookstore_secure/MyInfo.jsp
--- bookstore/MyInfo.jsp	2018-03-04 13:33:53.975755037 -0600
+++ bookstore_secure/MyInfo.jsp	2018-03-04 13:32:49.391455974 -0600
@@ -112,7 +112,8 @@
       if ( iAction == iupdateAction || iAction == ideleteAction ) {
         pPKmember_id = getParam( request, "PK_member_id");
         if ( isEmpty(pPKmember_id)) return sFormErr;
-        sWhere = "member_id=" + toSQL(pPKmember_id, adNumber);
+	pPKmember_id = toSQL(pPKmember_id, adNumber);
+        sWhere = "member_id = ?";
       }
 
 
@@ -164,23 +165,34 @@
 
 
       sSQL = "";
+      boolean updateValid = false;
       // Create SQL statement
 
       switch (iAction) {
 
       case iupdateAction:
 
+	  /*fldmember_password = toSQL(fldmember_password, adText);
+	  fldname = toSQL(fldname, adText);
+	  fldlast_name = toSQL(fldlast_name, adText);
+	  fldemail = toSQL(fldemail, adText);
+	  fldaddress = toSQL(fldaddress, adText);
+	  fldphone = toSQL(fldphone, adText);
+	  fldnotes = toSQL(fldnotes, adText);
+	  fldcard_type_id = toSQL(fldcard_type_id, adNumber);
+	  fldcard_number = toSQL(fldcard_number, adText);*/
           sSQL = "update members set " +
-                "member_password=" + toSQL(fldmember_password, adText) +
-                ",first_name=" + toSQL(fldname, adText) +
-                ",last_name=" + toSQL(fldlast_name, adText) +
-                ",email=" + toSQL(fldemail, adText) +
-                ",address=" + toSQL(fldaddress, adText) +
-                ",phone=" + toSQL(fldphone, adText) +
-                ",notes=" + toSQL(fldnotes, adText) +
-                ",card_type_id=" + toSQL(fldcard_type_id, adNumber) +
-                ",card_number=" + toSQL(fldcard_number, adText);
+                "member_password = ?" +
+                ",first_name = ?" +
+                ",last_name = ?" +
+                ",email = ?" + 
+                ",address = ?" +
+                ",phone = ?" +
+                ",notes = ?" +
+                ",card_type_id = ?" +
+                ",card_number = ?";
           sSQL = sSQL + " where " + sWhere;
+	  updateValid = true;
         break;
 
       }
@@ -188,7 +200,20 @@
       if ( sFormErr.length() > 0 ) return sFormErr;
       try {
         // Execute SQL statement
-        stat.executeUpdate(sSQL);
+	      PreparedStatement pstmt = conn.prepareStatement(sSQL);
+	      if (updateValid) {
+		  pstmt.setString(1, fldmember_password);
+		  pstmt.setString(2, fldname);
+		  pstmt.setString(3, fldlast_name);
+		  pstmt.setString(4, fldemail);
+		  pstmt.setString(5, fldaddress);
+		  pstmt.setString(6, fldphone);
+		  pstmt.setString(7, fldnotes);
+		  pstmt.setString(8, fldcard_type_id);
+		  pstmt.setString(9, fldcard_number);
+		  pstmt.setString(10, pPKmember_id);
+	      }
+	      pstmt.executeUpdate();
       }
       catch(java.sql.SQLException e) {
         sFormErr = e.toString(); return (sFormErr);
@@ -261,7 +286,7 @@
       String pmember_id = (String) session.getAttribute("UserID");
       if ( isEmpty(pmember_id)) { bPK = false; }
 
-      sWhere += "member_id=" + toSQL(pmember_id, adNumber);
+      sWhere += "member_id = ?";
       primaryKeyParams += "<input type=\"hidden\" name=\"PK_member_id\" value=\""+pmember_id+"\"/>";
 
       sSQL = "select * from members where " + sWhere;
@@ -280,7 +305,9 @@
       if ( bPK &&  ! (sAction.equals("insert") && "Form".equals(sForm))) {
 
         // Open recordset
-        rs = openrs( stat, sSQL);
+	PreparedStatement pstmt = conn.prepareStatement(sSQL);
+        pstmt.setString(1, pmember_id);
+        rs = pstmt.executeQuery();
         rs.next();
         String[] aFields = getFieldsName( rs );
         getRecordToHash( rs, rsHash, aFields );
diff -Naur bookstore/Registration.jsp bookstore_secure/Registration.jsp
--- bookstore/Registration.jsp	2018-03-04 13:33:53.975755037 -0600
+++ bookstore_secure/Registration.jsp	2018-03-04 13:32:49.391455974 -0600
@@ -178,6 +178,7 @@
 
 
       sSQL = "";
+      boolean insertValid = false;
       // Create SQL statement
 
       switch (iAction) {
@@ -194,17 +195,8 @@
                 "phone," +
                 "card_type_id," +
                 "card_number)" +
-
-                " values (" + 
-                (fldmember_login) + "," +
-                (fldmember_password) + "," +
-                (fldfirst_name) + "," +
-                (fldlast_name) + "," +
-                (fldemail) + "," +
-                (fldaddress) + "," +
-                (fldphone) + "," +
-                (fldcard_type_id) + "," +
-                (fldcard_number) + ")";
+                " values ( ?, ?, ?, ?, ?, ?, ?, ?, ?)"; 
+		insertValid = true;
           break;
   
       }
@@ -212,7 +204,19 @@
       if ( sRegErr.length() > 0 ) return sRegErr;
       try {
         // Execute SQL statement
-        stat.executeUpdate(sSQL);
+        PreparedStatement pstmt = conn.prepareStatement(sSQL);
+	if (insertValid) {
+	    	pstmt.setString(1, fldmember_login);
+		pstmt.setString(2, fldmember_password);
+		pstmt.setString(3, fldfirst_name);
+		pstmt.setString(4, fldlast_name);
+		pstmt.setString(5, fldemail);
+		pstmt.setString(6, fldaddress);
+		pstmt.setString(7, fldphone);
+		pstmt.setString(8, fldcard_type_id);
+		pstmt.setString(9, fldcard_number);
+	}
+        pstmt.executeUpdate();
       }
       catch(java.sql.SQLException e) {
         sRegErr = e.toString(); return (sRegErr);
@@ -283,11 +287,11 @@
         pmember_id = getParam( request, "PK_member_id");
       }
 
-      
       fldmember_password2 = getParam(request,"member_password2");
       if ( isEmpty(pmember_id)) { bPK = false; }
-      
-      sWhere += "member_id=" + toSQL(pmember_id, adNumber);
+     
+      //member_id = toSQL(pmember_id, adNumber); 
+      sWhere += "member_id = ?";
       primaryKeyParams += "<input type=\"hidden\" name=\"PK_member_id\" value=\""+pmember_id+"\"/>";
 
       sSQL = "select * from members where " + sWhere;
@@ -306,7 +310,9 @@
       if ( bPK &&  ! (sAction.equals("insert") && "Reg".equals(sForm))) {
 
         // Open recordset
-        rs = openrs( stat, sSQL);
+	PreparedStatement pstmt = conn.prepareStatement(sSQL);
+   	pstmt.setString(1, pmember_id);
+        rs = pstmt.executeQuery();
         rs.next();
         String[] aFields = getFieldsName( rs );
         getRecordToHash( rs, rsHash, aFields );
diff -Naur bookstore/ShoppingCartRecord.jsp bookstore_secure/ShoppingCartRecord.jsp
--- bookstore/ShoppingCartRecord.jsp	2018-03-04 13:33:53.975755037 -0600
+++ bookstore_secure/ShoppingCartRecord.jsp	2018-03-04 13:32:49.487456315 -0600
@@ -119,7 +119,8 @@
       if ( iAction == iupdateAction || iAction == ideleteAction ) { 
         pPKorder_id = getParam( request, "PK_order_id");
         if ( isEmpty(pPKorder_id)) return sShoppingCartRecordErr;
-        sWhere = "order_id=" + toSQL(pPKorder_id, adNumber);
+	//pPKorder_id = toSQL(pPKorder_id, adNumber);
+        sWhere = "order_id = ?";
       }
 
 
@@ -152,21 +153,24 @@
 
 
       sSQL = "";
+      boolean updateValid = false, deleteValid = false;
       // Create SQL statement
 
       switch (iAction) {
   
       case iupdateAction:
-        
+          //fldmember_id = toSQL(fldmember_id, adNumber);
+          //fldquantity = toSQL(fldmember_id, adNumber);
           sSQL = "update orders set " +
-                "member_id=" + toSQL(fldmember_id, adNumber) +
-                ",quantity=" + toSQL(fldquantity, adNumber);
+                "member_id = ?" +
+                ",quantity = ?";
           sSQL = sSQL + " where " + sWhere;
+	  updateValid = true;
         break;
       
       case ideleteAction:
            sSQL = "delete from orders where " + sWhere;
-          
+           deleteValid = true;
         break;
   
       }
@@ -174,7 +178,15 @@
       if ( sShoppingCartRecordErr.length() > 0 ) return sShoppingCartRecordErr;
       try {
         // Execute SQL statement
-        stat.executeUpdate(sSQL);
+        PreparedStatement pstmt = conn.prepareStatement(sSQL);
+        if (updateValid) {
+	   pstmt.setString(1, fldmember_id);
+	   pstmt.setString(2, fldquantity);
+	   pstmt.setString(3, pPKorder_id);
+	} else if (deleteValid) {
+	   pstmt.setString(1, pPKorder_id);
+	}
+        pstmt.executeUpdate();
       }
       catch(java.sql.SQLException e) {
         sShoppingCartRecordErr = e.toString(); return (sShoppingCartRecordErr);
@@ -235,7 +247,7 @@
       
       if ( isEmpty(porder_id)) { bPK = false; }
       
-      sWhere += "order_id=" + toSQL(porder_id, adNumber);
+      sWhere += "order_id = ?";
       primaryKeyParams += "<input type=\"hidden\" name=\"PK_order_id\" value=\""+porder_id+"\"/>";
 
       sSQL = "select * from orders where " + sWhere;
@@ -254,7 +266,9 @@
       if ( bPK &&  ! (sAction.equals("insert") && "ShoppingCartRecord".equals(sForm))) {
 
         // Open recordset
-        rs = openrs( stat, sSQL);
+        PreparedStatement pstmt = conn.prepareStatement(sSQL);
+        pstmt.setString(1, porder_id);
+        rs = pstmt.executeQuery();
         rs.next();
         String[] aFields = getFieldsName( rs );
         getRecordToHash( rs, rsHash, aFields );
@@ -320,4 +334,4 @@
 
     }
     catch (Exception e) { out.println(e.toString()); }
-  } %>
\ No newline at end of file
+  } %>
